#include"Library.h"


EXEC SQL BEGIN DECLARE SECTION; 
char LReader_id[10];
char LBook_id[10];
char LBorrow_time[15];
char LReturn_time[15];
char LNull[15]="-1";
char LReader_name[15];

int LOver_time;
double LFine;

char LReader_password[10];
char LReader_sex[10];
int LReader_age;
char LReader_Company[15];
char LReader_work[10];

char LBook_name[15];
char LBook_writer[15];

char LBook_publisher[15];
int LBook_price;
char LBook_introduction[15];
char LBook_type[15];
int LBook_num;
int LBook_allnum;

EXEC SQL END DECLARE SECTION;
long SQLCODE;
EXEC SQL INCLUDE sqlca;


void admin_reader()
{
	int select_num;
	adminreader_menu();
	while(1)
	{
		scanf("%d",&select_num);
		switch(select_num)
		{
		case 1:allreader();break;
		case 2:addreader();break;
		case 3:deletereader();break;
		case 4:updatereader();break;
		case 5:break;
		case 0:
			{
				system("cls");
				DISCONNECT();
				printf(" ------------------------------------------------------------\n");
				printf("                   -=  感谢使用，再见！ =-                   \n");
				printf(" ------------------------------------------------------------\n");
				system("pause");
				exit(0);
			}
		default:printf("输入错误，请重新输入:");continue;
		}
		break;
	}
	
}


void admin_book()
{
	int select_num;
	adminbook_menu();
	while(1)
	{
		scanf("%d",&select_num);
		switch(select_num)
		{
		case 1:allbook();break;
		case 2:addbook();break;
		case 3:deletebook();break;
		case 4:updatebook();break;
		case 5:break;
		case 0:
			{
				system("cls");
				DISCONNECT();
				printf(" ------------------------------------------------------------\n");
				printf("                   -=  感谢使用，再见！ =-                   \n");
				printf(" ------------------------------------------------------------\n");
				system("pause");
				exit(0);
			}
		default:printf("输入错误，请重新输入:");continue;
		}
		break;
	}
}

void allbook()
{
	int  count=0;
	EXEC SQL DECLARE GX CURSOR FOR
		SELECT Book_id,Book_name,Book_writer,Book_publisher,Book_price,Book_introduction,Book_type,Book_num,Book_allnum
		FROM Book;
	EXEC SQL OPEN GX;
	if(sqlca->sqlcode!=0) /*sqlcode!=0,表示操作不成功*/
	{
		printf("发生了错误%d\n",SQLCODE);
		return 1;   
    } 
	for ( ; ; )
	{
		EXEC SQL FETCH GX INTO :LBook_id,:LBook_name,:LBook_writer:LNull,:LBook_publisher:LNull,:LBook_price:LNull,:LBook_introduction:LNull,:LBook_type,:LBook_num,:LBook_allnum;
		if (sqlca->sqlcode!=0)
		{
			printf("打印完成！返回主菜单！\n");
			break;
		}
		if(count++ == 0)
		{
			printf("\n%-10s\t%-10s\t%-10s\t%-10s\t%-10s\t%-10s\t%-10s\t%-10s\t%-10s\n","Book_id","Book_name","Book_writer","Book_publisher","Book_price","Book_intro..","Book_type","Book_num","Book_allnum");
		}
		printf("%-10s\t%-10s\t%-10s\t%-10s\t%-10d\t%-10s\t%-10s\t%-10d\t%-10d\n",LBook_id,LBook_name,LBook_writer,LBook_publisher,LBook_price,LBook_introduction,LBook_type,LBook_num,LBook_allnum);
		
	}
	EXEC SQL CLOSE GX;	
}

void allreader()
{
	int  count=0;
	EXEC SQL DECLARE FX CURSOR FOR
		SELECT Reader_id,Reader_password,Reader_name,Reader_sex,Reader_age,Reader_Company,Reader_work 
		FROM Reader;
	EXEC SQL OPEN FX;
	if(sqlca->sqlcode!=0) /*sqlcode!=0,表示操作不成功*/
	{
		printf("发生了错误%d\n",SQLCODE);
		return 1;   
    } 
	for ( ; ; )
	{
		EXEC SQL FETCH FX INTO :LReader_id,:LReader_password,:LReader_name,:LReader_sex:LNull,:LReader_age:LNull,:LReader_Company:LNull,:LReader_work:LNull;
		if (sqlca->sqlcode!=0)
		{
			printf("打印完成！返回主菜单！\n");
			break;
		}
		if(count++ == 0)
		{
			printf("\n%-10s\t%-10s\t%-10s\t%-10s\t%-10s\t%-10s\t%-10s\n","Reader_id","Reader_password","LReader_name","Reader_sex","Reader_age","Reader_Company","Reader_work");
		}
		printf("%-10s\t%-10s\t%-10s\t%-10s\t%-10d\t%-10s\t%-10s\n",LReader_id,LReader_password,LReader_name,LReader_sex,LReader_age,LReader_Company,LReader_work);
		
	}
	EXEC SQL CLOSE FX;		
}

void allborrow()
{
	int  count=0;
	EXEC SQL DECLARE AX CURSOR FOR
		SELECT Reader_id,Book_id,Borrow_time
		FROM Borrow;
	EXEC SQL OPEN AX;
	for ( ; ; )
	{
		EXEC SQL FETCH AX INTO :LReader_id,:LBook_id,:LBorrow_time;
		if (sqlca->sqlcode!=0)
		{
			break;
		}
		if(count++ == 0)
		{
			printf("借阅情况<未还>：");
			printf("\n%-10s %-10s %-15s\n","Reader_id","Book_id","Borrow_time");
		}
		printf("%-10s %-10s %-15s\n",LReader_id,LBook_id,LBorrow_time);
	}
	EXEC SQL CLOSE AX;
	count=0;
	EXEC SQL DECLARE BX CURSOR FOR
		SELECT Reader_id,Book_id,Borrow_time,Return_time
		FROM History;
	EXEC SQL OPEN BX;
	for ( ; ; )
	{
		EXEC SQL FETCH BX INTO :LReader_id,:LBook_id,:LBorrow_time,:LReturn_time :LNull;
		if (sqlca->sqlcode!=0)
		{
			printf("打印完成！返回主菜单！\n");
			break;
		}
		if(count++ == 0)
		{
			printf("借阅历史<已还>：");
			printf("\n%-10s %-10s %-15s %-15s\n","Reader_id","Book_id","Borrow_time","Return_time");
		}
		printf("%-10s %-10s %-15s %-15s\n",LReader_id,LBook_id,LBorrow_time,LReturn_time);
	}
	EXEC SQL CLOSE BX;
}


void overdue()
{
	int  count=0;
	EXEC SQL DECLARE QX CURSOR FOR
		SELECT *
		FROM view_overdue;
	EXEC SQL OPEN QX;
	for ( ; ; )
	{
		EXEC SQL FETCH QX INTO :LReader_id,:LReader_name,:LBook_name,:LBorrow_time,:LOver_time,:LFine;
		if (sqlca->sqlcode!=0)
		{
			printf("发生了错误%d\n",SQLCODE);
			printf("打印完成！返回主菜单！\n");
			break;
		}
		if(count++ == 0)
		{
			printf("\n%-10s\t%-10s\t%-10s\t%-10s\t%-10s\t%-10s\n","Reader_id","LReader_name","Book_id","Borrow_time","超期[天]","罚款[元]");
		}
		printf("%-10s\t%-10s\t%-10s\t%-10s\t%-10d\t%-10f\n",LReader_id,LReader_name,LBook_name,LBorrow_time,LOver_time,LFine);
	}
	EXEC SQL CLOSE QX;
}

void addreader()
{
	char YN;
	printf("输入读者的ID：");
	scanf("%s",&LReader_id);
	printf("输入读者的密码：");
	scanf("%s",&LReader_password);
	printf("输入读者的名字：");
	scanf("%s",&LReader_name);
	printf("输入读者的性别：");
	scanf("%s",&LReader_sex);
	printf("输入读者的年龄：");
	scanf("%d",&LReader_age);
	printf("输入读者的所在单位：");
	scanf("%s",&LReader_Company);
	printf("输入读者的职业：");
	scanf("%s",&LReader_work);
	EXEC SQL INSERT INTO Reader  
		VALUES(:LReader_id,:LReader_password,:LReader_name,:LReader_sex,:LReader_age,:LReader_Company,:LReader_work);
	if(sqlca->sqlcode!=0) /*sqlcode!=0,表示操作不成功*/
	{
		printf("发生了错误%d\n",SQLCODE);
		return 1;   
	} 
	else
	{
		printf("增加成功！");
	}
	printf("是否需要打印(Y/N):");
	do{scanf("%s",&YN);}
	while(YN != 'N' && YN != 'n' && YN != 'Y' && YN != 'y');
	if (YN == 'y' || YN == 'Y')
	{
		printf("\n%-10s\t%-10s\t%-10s\t%-10s\t%-10s\t%-10s\t%-10s\n","Reader_id","Reader_password","LReader_name","Reader_sex","Reader_age","Reader_Company","Reader_work");
		printf("%-10s\t%-10s\t%-10s\t%-10s\t%-10d\t%-10s\t%-10s\n",LReader_id,LReader_password,LReader_name,LReader_sex,LReader_age,LReader_Company,LReader_work);
		printf("打印完成！返回主菜单！\n");
		return 1;
	}
	printf("操作完成！返回主菜单！\n");
}

void deletereader()
{
	char YN;
	printf("请输入你要删除的读者的ID：");
	scanf("%s",&LReader_id);
	EXEC SQL SELECT Reader_id,Reader_password,Reader_name,Reader_sex,Reader_age,Reader_Company,Reader_work INTO :LReader_id,:LReader_password,:LReader_name,:LReader_sex:LNull,:LReader_age:LNull,:LReader_Company:LNull,:LReader_work:LNull
		FROM Reader 
		WHERE Reader_id=:LReader_id;
	if(sqlca->sqlcode!=0) /*sqlcode!=0,表示操作不成功*/
	{
		printf("发生了错误%d\n",SQLCODE);
		return 1;   
    } 
	printf("\n%-10s\t%-10s\t%-10s\t%-10s\t%-10s\t%-10s\t%-10s\n","Reader_id","Reader_password","LReader_name","Reader_sex","Reader_age","Reader_Company","Reader_work");
	printf("%-10s\t%-10s\t%-10s\t%-10s\t%-10d\t%-10s\t%-10s\n",LReader_id,LReader_password,LReader_name,LReader_sex,LReader_age,LReader_Company,LReader_work);
	printf("是否删除该读者（Y/N）：");
	do{scanf("%s",&YN);}
	while(YN != 'N' && YN != 'n' && YN != 'Y' && YN != 'y');
	if (YN == 'y' || YN == 'Y')
	{
		EXEC SQL DELETE
			FROM Reader
			WHERE Reader_id=:LReader_id;
		if(sqlca->sqlcode!=0) /*sqlcode!=0,表示操作不成功*/
		{
			printf("发生了错误%d\n",SQLCODE);
			return 1;   
		} 
		else
		{
			printf("删除成功！返回主菜单！\n");	
		}
	}
}

void updatereader()
{
	char YN;
	printf("请输入你要修改的读者的ID：");
	scanf("%s",&LReader_id);
	EXEC SQL SELECT Reader_id,Reader_password,Reader_name,Reader_sex,Reader_age,Reader_Company,Reader_work INTO :LReader_id,:LReader_password,:LReader_name,:LReader_sex:LNull,:LReader_age:LNull,:LReader_Company:LNull,:LReader_work:LNull
		FROM Reader 
		WHERE Reader_id=:LReader_id;
	if(sqlca->sqlcode!=0) /*sqlcode!=0,表示操作不成功*/
	{
		printf("发生了错误%d\n",SQLCODE);
		return 1;   
    } 
	printf("\n%-10s\t%-10s\t%-10s\t%-10s\t%-10s\t%-10s\t%-10s\n","Reader_id","Reader_password","LReader_name","Reader_sex","Reader_age","Reader_Company","Reader_work");
	printf("%-10s\t%-10s\t%-10s\t%-10s\t%-10d\t%-10s\t%-10s\n",LReader_id,LReader_password,LReader_name,LReader_sex,LReader_age,LReader_Company,LReader_work);
	printf("是否修改该读者（Y/N）：");
	do{scanf("%s",&YN);}
	while(YN != 'N' && YN != 'n' && YN != 'Y' && YN != 'y');
	if (YN == 'y' || YN == 'Y')
	{
		printf("输入读者的密码：");
		scanf("%s",&LReader_password);
		printf("输入读者的名字：");
		scanf("%s",&LReader_name);
		printf("输入读者的性别：");
		scanf("%s",&LReader_sex);
		printf("输入读者的年龄：");
		scanf("%d",&LReader_age);
		printf("输入读者的所在单位：");
		scanf("%s",&LReader_Company);
		printf("输入读者的职业：");
		scanf("%s",&LReader_work);
		EXEC SQL UPDATE Reader
			SET Reader_password=:LReader_password,Reader_name=:LReader_name,Reader_sex=:LReader_sex,Reader_age=:LReader_age,Reader_Company=:LReader_Company,Reader_work=:LReader_work
			WHERE Reader_id=:LReader_id;
		if(sqlca->sqlcode!=0) /*sqlcode!=0,表示操作不成功*/
		{
			printf("发生了错误%d\n",SQLCODE);
			return 1;   
		} 
		else
		{
			printf("修改成功！查看修改结果！\n");
			EXEC SQL SELECT Reader_id,Reader_password,Reader_name,Reader_sex,Reader_age,Reader_Company,Reader_work INTO :LReader_id,:LReader_password,:LReader_name,:LReader_sex:LNull,:LReader_age:LNull,:LReader_Company:LNull,:LReader_work:LNull
				FROM Reader 
				WHERE Reader_id=:LReader_id;
			printf("\n%-10s\t%-10s\t%-10s\t%-10s\t%-10s\t%-10s\t%-10s\n","Reader_id","Reader_password","LReader_name","Reader_sex","Reader_age","Reader_Company","Reader_work");
			printf("%-10s\t%-10s\t%-10s\t%-10s\t%-10d\t%-10s\t%-10s\n",LReader_id,LReader_password,LReader_name,LReader_sex,LReader_age,LReader_Company,LReader_work);	
		}
		printf("操作完成！返回主菜单！\n");
		return 1;
	}
	printf("操作完成！返回主菜单！\n");
}	


void addbook()
{
	char YN;
	printf("输入图书的ID：");
	scanf("%s",&LBook_id);
	printf("输入图书名：");
	scanf("%s",&LBook_name);
	printf("输入图书作者：");
	scanf("%s",&LBook_writer);
	printf("输入图书的出版社：");
	scanf("%s",&LBook_publisher);
	printf("输入图书的单价：");
	scanf("%d",&LBook_price);
	printf("输入图书的描述：");
	scanf("%s",&LBook_introduction);
	printf("输入图书的类型：");
	scanf("%s",&LBook_type);
	printf("输入图书的库存：");
	scanf("%d",&LBook_num);
	printf("输入图书的总量：");
	scanf("%d",&LBook_allnum);
	EXEC SQL INSERT INTO Book  
		VALUES(:LBook_id,:LBook_name,:LBook_writer:LNull,:LBook_publisher:LNull,:LBook_price:LNull,:LBook_introduction:LNull,:LBook_type,:LBook_num,:LBook_allnum);
	if(sqlca->sqlcode!=0) /*sqlcode!=0,表示操作不成功*/
	{
		printf("发生了错误%d\n",SQLCODE);
		return 1;   
	} 
	else
	{
		printf("增加成功！");
	}
	printf("是否需要打印(Y/N):");
	do{scanf("%s",&YN);}
	while(YN != 'N' && YN != 'n' && YN != 'Y' && YN != 'y');
	if (YN == 'y' || YN == 'Y')
	{
		EXEC SQL SELECT Book_id,Book_name,Book_writer,Book_publisher,Book_price,Book_introduction,Book_type,Book_num,Book_allnum INTO :LBook_id,:LBook_name,:LBook_writer:LNull,:LBook_publisher:LNull,:LBook_price:LNull,:LBook_introduction:LNull,:LBook_type,:LBook_num,:LBook_allnum
			FROM Book 
			WHERE Book_id=:LBook_id;
		if(sqlca->sqlcode!=0) /*sqlcode!=0,表示操作不成功*/
		{
			printf("发生了错误%d\n",SQLCODE);
			return 1;   
		} 
		printf("\n%-10s\t%-10s\t%-10s\t%-10s\t%-10s\t%-10s\t%-10s\t%-10s\t%-10s\n","Book_id","Book_name","Book_writer","Book_publisher","Book_price","Book_intro..","Book_type","Book_num","Book_allnum");
		printf("%-10s\t%-10s\t%-10s\t%-10s\t%-10d\t%-10s\t%-10s\t%-10d\t%-10d\n",LBook_id,LBook_name,LBook_writer,LBook_publisher,LBook_price,LBook_introduction,LBook_type,LBook_num,LBook_allnum);
		printf("打印完成！返回主菜单！\n");
		return 1;
	}
	printf("操作完成！返回主菜单！\n");
}

void deletebook()
{
	char YN;
	printf("请输入你要删除的图书的ID：");
	scanf("%s",&LBook_id);
	EXEC SQL SELECT Book_id,Book_name,Book_writer,Book_publisher,Book_price,Book_introduction,Book_type,Book_num,Book_allnum INTO :LBook_id,:LBook_name,:LBook_writer:LNull,:LBook_publisher:LNull,:LBook_price:LNull,:LBook_introduction:LNull,:LBook_type,:LBook_num,:LBook_allnum
		FROM Book 
		WHERE Book_id=:LBook_id;
	if(sqlca->sqlcode!=0) /*sqlcode!=0,表示操作不成功*/
	{
		printf("发生了错误%d\n",SQLCODE);
		return 1;   
    } 
	printf("\n%-10s\t%-10s\t%-10s\t%-10s\t%-10s\t%-10s\t%-10s\t%-10s\t%-10s\n","Book_id","Book_name","Book_writer","Book_publisher","Book_price","Book_intro..","Book_type","Book_num","Book_allnum");
	printf("%-10s\t%-10s\t%-10s\t%-10s\t%-10d\t%-10s\t%-10s\t%-10d\t%-10d\n",LBook_id,LBook_name,LBook_writer,LBook_publisher,LBook_price,LBook_introduction,LBook_type,LBook_num,LBook_allnum);
	printf("是否删除该图书（Y/N）：");
	do{scanf("%s",&YN);}
	while(YN != 'N' && YN != 'n' && YN != 'Y' && YN != 'y');
	if (YN == 'y' || YN == 'Y')
	{
		EXEC SQL DELETE
			FROM Book
			WHERE Book_id=:LBook_id;
		if(sqlca->sqlcode!=0) /*sqlcode!=0,表示操作不成功*/
		{
			printf("发生了错误%d\n",SQLCODE);
			return 1;   
		} 
		else
		{
			printf("删除成功！返回主菜单！\n");	
		}
	}
}

void updatebook()
{
	char YN;
	printf("请输入你要修改的图书的ID：");
	scanf("%s",&LBook_id);
	EXEC SQL SELECT Book_id,Book_name,Book_writer,Book_publisher,Book_price,Book_introduction,Book_type,Book_num,Book_allnum INTO :LBook_id,:LBook_name,:LBook_writer:LNull,:LBook_publisher:LNull,:LBook_price:LNull,:LBook_introduction:LNull,:LBook_type,:LBook_num,:LBook_allnum
		FROM Book 
		WHERE Book_id=:LBook_id;
	if(sqlca->sqlcode!=0) /*sqlcode!=0,表示操作不成功*/
	{
		printf("发生了错误%d\n",SQLCODE);
		return 1;   
    } 
	printf("\n%-10s\t%-10s\t%-10s\t%-10s\t%-10s\t%-10s\t%-10s\t%-10s\t%-10s\n","Book_id","Book_name","Book_writer","Book_publisher","Book_price","Book_intro..","Book_type","Book_num","Book_allnum");
	printf("%-10s\t%-10s\t%-10s\t%-10s\t%-10d\t%-10s\t%-10s\t%-10d\t%-10d\n",LBook_id,LBook_name,LBook_writer,LBook_publisher,LBook_price,LBook_introduction,LBook_type,LBook_num,LBook_allnum);
	printf("是否修改该图书（Y/N）：");
	do{scanf("%s",&YN);}
	while(YN != 'N' && YN != 'n' && YN != 'Y' && YN != 'y');
	if (YN == 'y' || YN == 'Y')
	{
		printf("输入图书名：");
		scanf("%s",&LBook_name);
		printf("输入图书作者：");
		scanf("%s",&LBook_writer);
		printf("输入图书的出版社：");
		scanf("%s",&LBook_publisher);
		printf("输入图书的单价：");
		scanf("%d",&LBook_price);
		printf("输入图书的描述：");
		scanf("%s",&LBook_introduction);
		printf("输入图书的类型：");
		scanf("%s",&LBook_type);
		EXEC SQL UPDATE Book
			SET Book_name=:LBook_name,Book_writer=:LBook_writer,Book_publisher=:LBook_publisher,Book_price=:LBook_price,Book_introduction=:LBook_introduction,Book_type=:LBook_type
			WHERE Book_id=:LBook_id;
		if(sqlca->sqlcode!=0) /*sqlcode!=0,表示操作不成功*/
		{
			printf("发生了错误%d\n",SQLCODE);
			return 1;   
		} 
		else
		{
			printf("修改成功！查看修改结果！\n");
			EXEC SQL SELECT Book_id,Book_name,Book_writer,Book_publisher,Book_price,Book_introduction,Book_type,Book_num,Book_allnum INTO :LBook_id,:LBook_name,:LBook_writer:LNull,:LBook_publisher:LNull,:LBook_price:LNull,:LBook_introduction:LNull,:LBook_type,:LBook_num,:LBook_allnum
				FROM Book 
				WHERE Book_id=:LBook_id;
			printf("\n%-10s\t%-10s\t%-10s\t%-10s\t%-10s\t%-10s\t%-10s\t%-10s\t%-10s\n","Book_id","Book_name","Book_writer","Book_publisher","Book_price","Book_intro..","Book_type","Book_num","Book_allnum");
			printf("%-10s\t%-10s\t%-10s\t%-10s\t%-10d\t%-10s\t%-10s\t%-10d\t%-10d\n",LBook_id,LBook_name,LBook_writer,LBook_publisher,LBook_price,LBook_introduction,LBook_type,LBook_num,LBook_allnum);
		}
		printf("操作完成！返回主菜单！\n");
		return 1;
	}
	printf("操作完成！返回主菜单！\n");
}